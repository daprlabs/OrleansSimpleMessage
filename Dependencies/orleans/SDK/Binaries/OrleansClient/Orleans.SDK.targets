<!--
***********************************************************************************************
Orleans Target for SDK Developers
Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Build path to ClientGenerator.exe -->
  <PropertyGroup>
    <ClientGenExeDir>$(TargetDir)</ClientGenExeDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OrleansSDK)'!=''">
    <ClientGenExeDir>$(OrleansSDK)\Binaries\OrleansClient</ClientGenExeDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(OrleansReferencesBase)'!=''">
    <ClientGenExeDir>$(OrleansReferencesBase)</ClientGenExeDir>
  </PropertyGroup>
  <Choose>
    <When Condition="HasTrailingSlash($(ClientGenExeDir))">
      <PropertyGroup>
        <ClientGenExe>$(ClientGenExeDir)ClientGenerator.exe</ClientGenExe>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <ClientGenExe>$(ClientGenExeDir)\ClientGenerator.exe</ClientGenExe>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '11.0'">
      <PropertyGroup Condition="Exists('$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Fsc.exe')">
        <FSharpCompilerPath>$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\fsc.exe</FSharpCompilerPath>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup Condition="Exists('$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.1\Framework\v4.0\Fsc.exe')">
        <FSharpCompilerPath>$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.1\Framework\v4.0\fsc.exe</FSharpCompilerPath>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- This target is run just before Compile in case of a Orleans Grain Interface Project -->
  <Target Name="OrleansClientPreprocessing"
          AfterTargets="BeforeCompile"
          BeforeTargets="CoreCompile"
          Condition="'$(OrleansProjectType)'=='Client'"
          Inputs="@(Compile);@(ReferencePath);"
          Outputs="$(ProjectDir)$(IntermediateOutputPath)$(TargetName)$(TargetExt)">
    <Message Text="[OrleansClientPreprocessing] - Project=$(ProjectName)" Importance="high"/>
    <Message Text="[OrleansClientPreprocessing] - OrleansSDK=$(OrleansSDK)"/>
    <Message Text="[OrleansClientPreprocessing] - OrleansReferencesBase=$(OrleansReferencesBase)"/>
    <Message Text="[OrleansClientPreprocessing] - Using ClientGenExeDir location=$(ClientGenExeDir)"/>
    <MakeDir Directories="$(IntermediateOutputPath)Generated;"/>
    <PropertyGroup>
      <ArgsFile>$(IntermediateOutputPath)$(TargetName).codegen.args.txt</ArgsFile>
    </PropertyGroup>
    <Message Text="[OrleansClientPreprocessing] - Code-gen args file=$(ArgsFile)"/>
    <WriteLinesToFile OverWrite="true" File="$(ArgsFile)" Lines="/nomerge"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/in:$(IntermediateOutputPath)$(TargetName)$(TargetExt)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/key:$(SnkFile)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/d:$([MSBuild]::Escape($(DefineConstants)))"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="@(Import->'/imports:%(Identity)')"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/rns:$(RootNamespace)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="@(ReferencePath->'/r:%(Identity)')"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/fsharp:$(FSharpCompilerPath)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/cwd:$(ProjectDir)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/config:$(Configuration)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/OptionExplicit:$(OptionExplicit)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/OptionCompare:$(OptionCompare)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/OptionStrict:$(OptionStrict)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/OptionInfer:$(OptionInfer)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/MyType:$(MyType)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="@(Compile->'/src:%(Identity)')"/>
    <Exec Command='"$(ClientGenExe)" "@$(ArgsFile)"' />
  </Target>
  
  <!-- This target is run just after Compile in case of a Orleans Grain Implementation Project -->
  <Target Name="OrleansServerObjProcessing"
          AfterTargets="BeforeCompile"
          BeforeTargets="CoreCompile"
          Condition="'$(OrleansProjectType)'=='Server'"
          Inputs="@(Compile);@(ReferencePath);$(ProjectDir)$(IntermediateOutputPath)$(TargetName)$(TargetExt)"
          Outputs="$(ProjectDir)$(IntermediateOutputPath)orleans.codegen.timpestamp">
    <Message Text="[OrleansServerObjProcessing] - Creating Server for Project=$(ProjectName)" Importance="high"/>
    <Message Text="[OrleansServerObjProcessing] - Using ClientGenExe location=$(ClientGenExe)"/>
    <PropertyGroup>
      <ArgsFile>$(IntermediateOutputPath)$(TargetName).codegen.args.txt</ArgsFile>
    </PropertyGroup>
    <Message Text="[OrleansServerObjProcessing] - Code-gen args file=$(ArgsFile)"/>
    <WriteLinesToFile Overwrite="true" File="$(ArgsFile)" Lines="/svr"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/in:$(IntermediateOutputPath)$(TargetName)$(TargetExt)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/key:$(SnkFile)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/d:$([MSBuild]::Escape($(DefineConstants)))"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="@(Import->'/imports:%(Identity)')"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/rns:$(RootNamespace)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="@(ReferencePath->'/r:%(Identity)')"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/fsharp:$(FSharpCompilerPath)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/cwd:$(ProjectDir)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/config:$(Configuration)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/OptionExplicit:$(OptionExplicit)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/OptionCompare:$(OptionCompare)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/OptionStrict:$(OptionStrict)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/OptionInfer:$(OptionInfer)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="/MyType:$(MyType)"/>
    <WriteLinesToFile File="$(ArgsFile)" Lines="@(Compile->'/src:%(Identity)')"/>
    <Exec Command='"$(ClientGenExe)" "@$(ArgsFile)"'
          Outputs='$(IntermediateOutputPath)$(TargetName)$(TargetExt)' />
  </Target>
</Project>
